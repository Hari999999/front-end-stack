// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components GithubUser mounts the component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="constrain-width medium"
>
    <h4
        className="github-user-label"
    >
        Github User:
    </h4>
    <div
        className="test-search"
    >
        <input />
        <button
            className="button small || github-get-user"
            onClick={[Function]}
        >
            Get User
        </button>
    </div>
    <div
        className="github-user"
    >
        <img
            src="https://myimage.com"
        />
        <h4>
            hally9k
        </h4>
        <p>
            ID: 
            123456
        </p>
    </div>
</div>,
  "nodes": Array [
    <div
      className="constrain-width medium"
>
      <h4
            className="github-user-label"
      >
            Github User:
      </h4>
      <div
            className="test-search"
      >
            <input />
            <button
                  className="button small || github-get-user"
                  onClick={[Function]}
            >
                  Get User
            </button>
      </div>
      <div
            className="github-user"
      >
            <img
                  src="https://myimage.com"
            />
            <h4>
                  hally9k
            </h4>
            <p>
                  ID: 
                  123456
            </p>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Root
        error={null}
        getGithubUser={[Function]}
        user={
                Object {
                        "avatar": "https://myimage.com",
                        "id": "123456",
                        "username": "hally9k",
                      }
        }
/>,
      "_debugID": 27,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Root {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "error": null,
          "getGithubUser": [Function],
          "user": Object {
            "avatar": "https://myimage.com",
            "id": "123456",
            "username": "hally9k",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 8,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="constrain-width medium"
>
          <h4
                    className="github-user-label"
          >
                    Github User:
          </h4>
          <div
                    className="test-search"
          >
                    <input />
                    <button
                              className="button small || github-get-user"
                              onClick={[Function]}
                    >
                              Get User
                    </button>
          </div>
          <div
                    className="github-user"
          >
                    <img
                              src="https://myimage.com"
                    />
                    <h4>
                              hally9k
                    </h4>
                    <p>
                              ID: 
                              123456
                    </p>
          </div>
</div>,
        "_debugID": 28,
        "_renderedOutput": <div
          className="constrain-width medium"
>
          <h4
                    className="github-user-label"
          >
                    Github User:
          </h4>
          <div
                    className="test-search"
          >
                    <input />
                    <button
                              className="button small || github-get-user"
                              onClick={[Function]}
                    >
                              Get User
                    </button>
          </div>
          <div
                    className="github-user"
          >
                    <img
                              src="https://myimage.com"
                    />
                    <h4>
                              hally9k
                    </h4>
                    <p>
                              ID: 
                              123456
                    </p>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Root
    error={null}
    getGithubUser={[Function]}
    user={
        Object {
            "avatar": "https://myimage.com",
            "id": "123456",
            "username": "hally9k",
          }
    }
/>,
}
`;
